version: '3'

services:
  logstash:
    image: logstash:${LOGSTASH_IMAGE_VERSION:-7.17.9}
    # image: logstash:${LOGSTASH_IMAGE_VERSION:-8.6.1}
    links:
      - elasticsearch
    volumes:
      - './elk/logstash/:/usr/share/logstash/pipeline/'
      - './traefik/logs:/var/log/traefik'
      - './nginx/logs:/var/log/nginx'
    restart: always
    labels:
      - 'traefik.enable=false'

  elasticsearch:
    image: elasticsearch:${ELASTICSEARCH_IMAGE_VERSION:-7.17.9}
    # image: elasticsearch:${ELASTICSEARCH_IMAGE_VERSION:-8.6.1}
    volumes:
      - './elk/elasticsearch/data:/usr/share/elasticsearch/data'
    environment:
      cluster.name: ${ELASTICSEARCH_CLUSTER_NAME:-docker-cluster}
      bootstrap.memory_lock: ${ELASTICSEARCH_MEMORY_LOCK:-true}
      discovery.type: ${ELASTICSEARCH_DISCOVERY_TYPE:-single-node}
      ES_JAVA_OPTS: ${ELASTICSEARCH_JAVA_OPTS:--Xms512m -Xmx512m}
    restart: always
    ulimits:
      memlock:
        soft: -1
        hard: -1
    labels:
      - 'traefik.enable=false'

  kibana:
    image: kibana:${KIBANA_IMAGE_VERSION:-7.17.9}
    # image: kibana:${KIBANA_IMAGE_VERSION:-8.6.1}
    links:
      - elasticsearch
    volumes:
      - './elk/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml'
    networks:
      - 'srv'
    restart: always
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.kibana.rule=Host(`${KIBANA_HOST:-kibana.${SITE:-localhost}}`)'
      - 'traefik.http.services.kibana.loadbalancer.server.port=5601'
      - 'traefik.http.routers.kibana.middlewares=basic_auth@docker'
