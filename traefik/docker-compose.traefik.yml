version: '3'

services:
  traefik:
    image: traefik:${TRAEFIK_IMAGE_VERSION:-v2.9}
    command:
      # Providers
      - '--providers.docker'
      - '--providers.docker.exposedbydefault=${TRAEFIK_DOCKER_EXPOSED_BY_DEFAULT:-false}'
      - '--providers.docker.network=${TRAEFIK_DOCKER_NETWORK:-traefik}'
      - '--providers.file'
      - '--providers.file.directory=/dynamic/'
      - '--providers.file.watch=true'
      # Entrypoints
      - '--entrypoints.web.address=:${TRAEFIK_WEB_ENTRYPOINT:-80}'
      - '--entrypoints.web.http.redirections.entrypoint.to=websecure'
      - '--entrypoints.websecure.address=:${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}'
      # Let's Encrypt
      - '--certificatesresolvers.letsEncrypt.acme.email=${ROOT_EMAIL:-changeme@changeme.org}'
      - '--certificatesresolvers.letsEncrypt.acme.tlschallenge=true'
      - '--certificatesresolvers.letsEncrypt.acme.storage=/acme.json'
      - '--entrypoints.websecure.http.tls.certresolver=letsEncrypt'
      # Logs
      - '--accesslog.filepath=/logs/access.log'
      - '--accesslog.format=json'
      - '--log.filepath=/logs/traefik.log'
      - '--log.format=json'
      - '--log.level=${TRAEFIK_LOG_LEVEL:-ERROR}'
      - '--metrics.prometheus'
      # Misc
      - '--api.dashboard'
      - '--entrypoints.websecure.http.middlewares=compress@file,headers@file${TRAEFIK_PLUGINS:-}'
      - '--experimental.plugins.fail2ban.modulename=github.com/tommoulard/fail2ban'
      - '--experimental.plugins.fail2ban.version=v0.6.6'
      - '--global.checknewversion=${TRAEFIK_CHECK_NEW_VERSION:-false}'
      - '--global.sendanonymoususage=${TRAEFIK_SEND_ANONYMOUS_USAGE:-false}'
      - '--ping'
    ports:
      - '${TRAEFIK_WEB_ENTRYPOINT:-80}:${TRAEFIK_WEB_ENTRYPOINT:-80}'
      - '${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}:${TRAEFIK_WEBSECURE_ENTRYPOINT:-443}'
    networks:
      - 'srv'
    restart: always
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 10s
      timeout: 10s
      retries: 5
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.traefik.rule=Host(`${TRAEFIK_HOST:-traefik.${SITE:-localhost}}`)'
      - 'traefik.http.routers.traefik.service=api@internal'
      - 'traefik.http.routers.traefik.middlewares=basic_auth@docker,shadow_auth@docker'
      # Middleware definitions
      - 'traefik.http.middlewares.basic_auth.basicauth.users=${USERS}'
      - 'traefik.http.middlewares.basic_auth.basicauth.removeHeader=true'
      - "traefik.http.middlewares.shadow_auth.basicauth.usersfile=/.shadow"
      - 'traefik.http.middlewares.shadow_auth.basicauth.removeHeader=true'
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
      - '${USERS_FILE:-./.shadow}:/.shadow:ro'
      - './traefik/logs:/logs'
      - './traefik/dynamic:/dynamic'
      - './traefik/acme.json:/acme.json'
    depends_on:
      traefik-init:
        condition: service_started

  traefik-init:
    image: traefik:${TRAEFIK_IMAGE_VERSION:-v2.9}
    command: |
      chmod 600 /acme.json
    volumes:
      - './traefik/acme.json:/acme.json'
